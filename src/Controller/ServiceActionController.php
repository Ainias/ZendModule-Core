<?php
/**
 * Created by PhpStorm.
 * User: silas
 * Date: 13.07.16
 * Time: 17:50
 */

namespace Ainias\Core\Controller;


use Interop\Container\ContainerInterface;
use Zend\Http\Request;
use Zend\Http\Response;
use Zend\Mvc\Controller\AbstractActionController;
use Zend\Mvc\MvcEvent;
use Zend\Mvc\Plugin\FlashMessenger\FlashMessenger;
use Zend\ServiceManager\ServiceLocatorInterface;
use Zend\Stdlib\RequestInterface;

class ServiceActionController extends AbstractActionController
{
    /** @var  ServiceLocatorInterface */
    protected $serviceLocator;

    /**
     * ServiceActionController constructor.
     * @param $serviceLocator
     */
    public function __construct(ServiceLocatorInterface $serviceLocator)
    {
        $this->serviceLocator = $serviceLocator;
    }

    /**
     * @return ContainerInterface
     */
    public function getServiceLocator()
    {
        return $this->serviceLocator;
    }

    protected function get($service)
    {
        return $this->serviceLocator->get($service);
    }

    /**
     * @return FlashMessenger
     */
    public function flashMessenger()
    {
        return parent::flashMessenger();
    }


    /**
     * @return Request|\Zend\Console\Request|RequestInterface
     */
    public function getRequest()
    {
        return parent::getRequest(); // TODO: Change the autogenerated stub
    }


    /**
     * @return Response|\Zend\Stdlib\ResponseInterface
     */
    public function getResponse()
    {
        return parent::getResponse(); // TODO: Change the autogenerated stub
    }


    protected function triggerDispatchError($statusCode = 404)
    {
        $this->getResponse()->setStatusCode($statusCode);
        $this->getEvent()->setName(MvcEvent::EVENT_DISPATCH_ERROR);
        $this->getEventManager()->triggerEvent($this->getEvent());
        return false;
    }
}